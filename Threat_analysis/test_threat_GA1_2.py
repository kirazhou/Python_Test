# -*- coding:UTF-8 -*-
import unittest
import sys
import os
import time
import json
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from GemstoneLib.page_class import para, login_page

class Test_suite_adds_functionality(unittest.TestCase):
    def setUp(self):
        self.login = login_page()
        self.project_manager = self.login.open_browser_to_login_page(para.ADMIN_USER, para.ADMIN_USER_PASSWORD)

    def test_C707346(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_question(index=1, choice='else')
        result = threat_analysis.question_examination(index=1)
        threat_analysis.go_back()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(result)

    def test_C726634(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_question(index=1, choice='else')
        threat_analysis.go_back()
        res1 = threat_analysis.get_precentage(form_name='电力监控系统')
        threat_analysis.enter_form(form_name='电力监控系统', action='continue')
        threat_analysis.fill_questionnaire(1)
        threat_analysis.go_back()
        res2 = threat_analysis.get_precentage(form_name='电力监控系统')
        threat_analysis.enter_form(form_name='电力监控系统', action='continue')
        threat_analysis.check_commit()
        threat_analysis.close_report()
        res3 = threat_analysis.check_form_complete()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(u'1%' in res1 and u'100%' in res2 and res3)

    def test_C726636(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_questionnaire(1)
        threat_analysis.check_commit()
        threat_analysis.close_report()
        threat_analysis.enter_report(form_name='电力监控系统')
        threat_analysis.close_report()
        res = threat_analysis.check_form_complete()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(res)

    def test_C726635(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_question(index=1, choice='else')
        threat_analysis.go_back()
        threat_analysis.enter_form(form_name='电力监控系统', action='continue')
        threat_analysis.fill_questionnaire(1)
        threat_analysis.go_back()
        threat_analysis.enter_form(form_name='电力监控系统', action='continue')
        threat_analysis.check_commit()
        res = threat_analysis.check_form_complete()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(res)

    def test_C747330(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.go_back()
        threat_analysis.enter_form(form_name='电力监控系统',action='continue')
        threat_analysis.fill_question(index=2, choice='no')
        threat_analysis.check_commit()
        res = threat_analysis.get_management_level()
        print res
        threat_analysis.close_report()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(u'未达标' in res)

    def test_C747331(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.go_back()
        threat_analysis.enter_form(form_name='电力监控系统',action='continue')
        threat_analysis.select_sub_title(title='网络安全')
        threat_analysis.fill_question(index=2, choice='no')
        threat_analysis.check_commit()
        res = threat_analysis.get_performance_level()
        print res
        threat_analysis.close_report()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(u'未达标' in res)

    def test_C747332(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        res = threat_analysis.change_level(level='水电厂监控系统', system='总装机1000MW以下')
        res2 = threat_analysis.change_level(level='风电场监控系统', system='风电场总装机容量200MW及以上')
        print res, res2
        threat_analysis.go_back()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(u'厂站端系统2级' in res and u'厂站端系统3级' in res2)

    def test_C747333(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        res = threat_analysis.change_level(level='电能量计量系统', system='地级及以下')
        res2 = threat_analysis.change_level(level='水电厂梯级调度监控系统', system='')
        res3 = threat_analysis.change_level(level='新一代电网调度控制系统的实时监控与预警功能模块', system='省级以上')
        print res, res2, res3
        threat_analysis.go_back()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(u'调度端系统2级' in res and u'调度端系统3级' in res2, u'调度端系统4级' in res3)

    def test_C747334(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.change_level(level='电能量计量系统', system='地级及以下')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.check_commit()
        num1 = threat_analysis.get_number_of_yes()
        threat_analysis.close_report()
        threat_analysis.enter_form(form_name='电力监控系统', action='reset')
        threat_analysis.change_level(level='水电厂梯级调度监控系统', system='')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.check_commit()
        num2 = threat_analysis.get_number_of_yes()
        threat_analysis.close_report()
        threat_analysis.enter_form(form_name='电力监控系统', action='reset')
        threat_analysis.change_level(level='新一代电网调度控制系统的实时监控与预警功能模块', system='省级以上')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.check_commit()
        num3 = threat_analysis.get_number_of_yes()
        threat_analysis.close_report()
        threat_analysis.enter_form(form_name='电力监控系统', action='reset')
        threat_analysis.change_level(level='水电厂监控系统', system='总装机1000MW以下')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.check_commit()
        num4 = threat_analysis.get_number_of_yes()
        threat_analysis.close_report()
        threat_analysis.enter_form(form_name='电力监控系统', action='reset')
        threat_analysis.change_level(level='风电场监控系统', system='风电场总装机容量200MW及以上')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.check_commit()
        num5 = threat_analysis.get_number_of_yes()
        threat_analysis.close_report()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(num1 in u'115' and num2 in u'115' and num3 in u'123' and num4 in u'106'and num5 in u'106')

    def test_C747424(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.change_level(level='光伏电站监控系统', system='光伏电站总装机容量200MW及以上')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.select_sub_title(title='安全管理制度')
        threat_analysis.fill_question(index=1, choice='else')
        threat_analysis.check_commit()
        threat_analysis.close_report()
        threat_analysis.enter_form(form_name='电力监控系统', action='reset')
        threat_analysis.select_sub_title(title='安全管理制度')
        res = threat_analysis.get_question_comment(index=1)
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(len(res)>1)

    def test_C747423(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.select_sub_title(title='安全管理制度')
        threat_analysis.reset_current_page()
        threat_analysis.go_back()
        threat_analysis.enter_form(form_name='电力监控系统', action='continue')
        threat_analysis.go_back()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)

    def test_C763105(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.select_sub_title(title='安全管理制度')
        threat_analysis.fill_question(index=1, choice='else')
        threat_analysis.select_sub_title(title='安全管理机构')
        threat_analysis.select_sub_title(title='安全管理制度')
        res = threat_analysis.get_question_comment(index=1)
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)
        self.assertTrue(res in u'anything')

    def test_C595363(self):
        task_name = str(int(time.time()))
        project_navigation = self.project_manager.build_project(task_name)
        threat_analysis = project_navigation.goto_threat_analysis()
        threat_analysis.enter_form(form_name='电力监控系统')
        threat_analysis.change_level(level='光伏电站监控系统', system='光伏电站总装机容量200MW及以上')
        threat_analysis.fill_questionnaire(0)
        threat_analysis.select_sub_title(title='安全管理制度')
        threat_analysis.fill_question(index=1, choice='else')
        threat_analysis.check_commit()
        threat_analysis.close_report()
        self.project_manager.goto_project_manager()
        self.project_manager.delete_project(task_name)

    def tearDown(self):
        time.sleep(1)
        self.login.quit()          #关闭chrome浏览器

if __name__ =='__main__':
  unittest.main()
